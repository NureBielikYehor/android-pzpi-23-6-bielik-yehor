МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 2 з дисципліни
Програмування під Android
   





Виконав:                                                Перевірив:
ст. гр. ПЗПІ-23-6                                       ст. викладач кафедри ПІ
Бєлік Єгор                                              Сокорчук Ігор Петрович









Харків 2024

ЗАВДАННЯ

     Розробити редактор, у якому з допомогою трьох регуляторів SeekBar встановлюється колір панелі.
     Регулятори визначають RGB компоненти кольору панелі. Зовнішній вигляд екрану редактора повинен залежати від орієнтації пристроя. У портретній орієнтації пристроя, регулятори повинні знаходитися знизу від панелі, займати 1/3 висоти і розташовуватися на всю ширину екрану. У ланшафтній – праворуч від панелі і займати 1/3 ширини. Решту екрану повинна займати кольорова панель.


ХІД РОБОТИ

     Cтворюємо новий проєкт та обираємо шаблон Empty Views Activity.
     Спочатку зробимо розмітку для портретної та ландшафтної орієнтацій. Після цього відкриваємо файл activity_main.xml, та починаємо писати розмітку для вікна, де буде відображатися колір:

1 <View
2   android:id="@+id/panel"
3   android:layout_width="match_parent"     
4   android:layout_height="0dp"
5   android:layout_weight="0.67"
6   android:background="@color/black" />
7   app:layout_constraintBottom_toBottomOf="parent" />

     Створюємо 3 регулятори seekBar, кожен з яких відповідатиме за свій колір: перший - червоний, другий – зелений, третій – синій [ДОДАТОК А].
     Вирівнюємо згідно умови завдання, так щоб регулятори займали одну третину екранного простору. 
     Аналогічно створюємо розмітку для ландшафтної орієнтації [ДОДАТОК Б].
     Коли розмітки було створено, можна переходити до основного наповнення. Відкриваємо MainActivity.java.
     Спершу створимо змінні для збереження кольорового коду:
     
1 private final int[] red = new int[1];
2 private final int[] green = new int[1];
3 private final int[] blue = new int[1];

     Знаходимо за id панель для відображення кольору:
      1 View panel = findViewById(R.id.panel);

     Знаходимо за id кожен із регуляторів, за допомогою вбудованого метода onProgressChanged записуємо нове значення для змінної кольору. Змінюємо колір панелі на новий зо допомогою описаної пізніше функції changeColor:
     
1 redSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
2     @Override
3     public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
4         red[0] = progress;
5         changeColor();
6     }
7     @Override
8     public void onStartTrackingTouch(SeekBar seekBar) {
9     }
10     @Override
11     public void onStopTrackingTouch(SeekBar seekBar) {
12     }
13 });

     Аналогічно створюємо методи для кожного із регуляторів.
     Тепер перейдемо до changeColor. Ця функція змінює формат трьох числових змінних на код RGB:
     
1 private void changeColor() {
2     View view = findViewById(R.id.panel);
3     int color = Color.rgb(red[0], green[0], blue[0]);
4     view.setBackgroundColor(color);
5 }

     Ця функція оновлює фон вказаного елемента інтерфейсу залежно від значень кольорових компонентів red[0], green[0], blue[0]. Вона може бути викликана, наприклад, під час зміни положення повзунків, які регулюють інтенсивність кольорів. [ДОДАТОК В]


ВИСНОВКИ

     Під час лабораторної роботи було закріплено знання з використання регуляторів для зміни параметрів кольору та динамічного оновлення фону елемента View залежно від введених значень.
     Відеозвіт на YouTube. URL: https://youtu.be/MbUfmx_vbds 



ВИКОРИСТАНІ ДЖЕРЕЛА

1. Документація SeekBar Android developers. URL: https://developer.android.com/reference/android/widget/SeekBar (дата звернення: 14.12.2024)
2. Документація Guideline Android developers. URL: https://developer.android.com/reference/androidx/constraintlayout/widget/Guideline (дата звернення: 14.12.2024)


ДОДАТОК А

Файл розмітки для портерної орієнтаціїї.

1   <?xml version="1.0" encoding="utf-8"?>
2   <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
3       xmlns:tools="http://schemas.android.com/tools"
4       android:layout_width="match_parent"
5       android:layout_height="match_parent"
6       android:orientation="vertical"
7       android:weightSum="1"
8       tools:context=".MainActivity">
9       <View
10          android:id="@+id/panel"
11          android:layout_width="match_parent"
12          android:layout_height="0dp"
13          android:layout_weight="0.67"
14          android:background="@color/black" />
15      <SeekBar
16          android:id="@+id/red"
17          android:layout_width="match_parent"
18          android:layout_height="0dp"
19          android:layout_weight="0.11"
20          android:max="255" />
21      <SeekBar
22          android:id="@+id/green"
23          android:layout_width="match_parent"
24          android:layout_height="0dp"
25          android:layout_weight="0.11"
26          android:max="255" />
27      <SeekBar
28          android:id="@+id/blue"
29          android:layout_width="match_parent"
30          android:layout_height="0dp"
31          android:layout_weight="0.11"
32          android:max="255" />
33  </LinearLayout>

ДОДАТОК Б

     Файл розмітки для ландшафтної орієнтаціїї.

1   <?xml version="1.0" encoding="utf-8"?>
2   <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
3       xmlns:tools="http://schemas.android.com/tools"
4       android:layout_width="match_parent"
5       android:layout_height="match_parent"
6       android:orientation="horizontal"
7       android:weightSum="1"
8       tools:context="nure.bielik.yehor.lab_task2.MainActivity">
9       <View
10          android:id="@+id/panel"
11          android:layout_width="0dp"
12          android:layout_height="match_parent"
13          android:layout_weight="0.66"
14          android:background="@color/black" />
15      <LinearLayout
16          android:layout_width="0dp"
17          android:layout_height="match_parent"
18          android:layout_weight="0.34"
19          android:orientation="vertical"
20          android:weightSum="3">
21          <SeekBar
22              android:id="@+id/red"
23              android:layout_width="match_parent"
24              android:layout_height="0dp"
25              android:layout_weight="1"
26              android:max="255" />

27          <SeekBar
28              android:id="@+id/green"
29              android:layout_width="match_parent"
30              android:layout_height="0dp"
31              android:layout_weight="1"
32              android:max="255" />
33          <SeekBar
34              android:id="@+id/blue"
35              android:layout_width="match_parent"
36              android:layout_height="0dp"
37              android:layout_weight="1"
38              android:max="255" />
39      </LinearLayout>
40  </LinearLayout>

ДОДАТОК В

Код програми.
1   package nure.bielik.yehor.lab_task2;
2   import android.graphics.Color;
3   import android.os.Bundle;
4   import android.view.View;
5   import android.widget.SeekBar;
6   import androidx.appcompat.app.AppCompatActivity;
7   public class MainActivity extends AppCompatActivity {
8       private final int[] red = new int[1];
9       private final int[] green = new int[1];
10      private final int[] blue = new int[1];
11      @Override
12      protected void onCreate(Bundle savedInstanceState) {
13          super.onCreate(savedInstanceState);
14          setContentView(R.layout.activity_main);
15      }
16      @Override
17      protected void onStart() {
18          super.onStart();
19          SeekBar redSeekBar = findViewById(R.id.red);
20          SeekBar greenSeekBar = findViewById(R.id.green);
21          SeekBar blueSeekBar = findViewById(R.id.blue);
22          redSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
23              @Override
24              public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
25                  red[0] = progress;
26                  changeColor();
27              }
28              @Override
29              public void onStartTrackingTouch(SeekBar seekBar) {
30              }
31              @Override
32              public void onStopTrackingTouch(SeekBar seekBar) {
33              }
34          });
35          greenSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
36              @Override
37              public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
38                  green[0] = progress;
39                  changeColor();
40              }
41              @Override
42              public void onStartTrackingTouch(SeekBar seekBar) {
43              }
44              @Override
45              public void onStopTrackingTouch(SeekBar seekBar) {
46              }
47          });
48          blueSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
49              @Override
50              public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
51                  blue[0] = progress;
52                  changeColor();
53              }
54              @Override
55              public void onStartTrackingTouch(SeekBar seekBar) {
56              }
57              @Override
58              public void onStopTrackingTouch(SeekBar seekBar) {
59              }
60          });
61      }
62      private void changeColor() {
63          View view = findViewById(R.id.panel);
64          int color = Color.rgb(red[0], green[0], blue[0]);
65          view.setBackgroundColor(color);
66      }
67  }
2


